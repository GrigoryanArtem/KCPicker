<!--
Copyright 2017 Grigoryan Artem
Licensed under the Apache License, Version 2.0
-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:local="clr-namespace:KCPicker.GUI.Styles">
    <Style
        x:Key="SelectableTextBlock"
        TargetType="TextBox">

        <Style.Setters>
            <Setter
                Property="BorderThickness"
                Value="0" />

            <Setter
                Property="IsReadOnly"
                Value="True" />

            <Setter
                Property="TextWrapping"
                Value="Wrap" />

            <Setter
                Property="Background"
                Value="Transparent" />

            <Setter
                Property="TextAlignment"
                Value="Center" />

            <Setter 
                Property="VerticalAlignment"
                Value="Center" />

            <Setter
                Property="HorizontalAlignment"
                Value="Center" />

            <Setter
                Property="FontSize"
                Value="36" />
        </Style.Setters>
    </Style>

    <Style 
        x:Key="FlatButton"
        TargetType="ToggleButton">
        <Setter
            Property="Background"
            Value="Transparent"/>

        <Setter
            Property="BorderThickness"
            Value="0"/>
    </Style>

    <Style
        TargetType="xceed:ColorPicker"
        x:Key="FlatColorPicker">

        <Setter
            Property="ShowTabHeaders"
            Value="False" />

        <Setter
            Property="ShowStandardColors"
            Value="False" />

        <Setter
            Property="ShowAvailableColors"
            Value="False" />

        <Setter
            Property="BorderThickness"
            Value="0" />

        <Setter
            Property="ColorMode"
            Value="ColorCanvas" />

        <Setter
            Property="ButtonStyle"
            Value="{DynamicResource FlatButton}" />

        <Setter
            Property="DropDownBackground"
            Value="White" />
    </Style>

    <Style
        TargetType="Canvas"
        x:Key="FlatCanvas" >
        
        <Setter
            Property="RenderOptions.EdgeMode"
            Value="Aliased" />

        <Setter
            Property="RenderOptions.BitmapScalingMode"
            Value="Fant" />
    </Style>

    <Style x:Key="TopMenu"
        BasedOn="{StaticResource MetroMenu}"
        TargetType="Menu">

        <Setter
            Property="Background"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Control}, Path=Background}" />
    </Style>

    <Style x:Key="TopMenuItem"
        BasedOn="{StaticResource MetroMenuItem}"
        TargetType="MenuItem" >

        <Setter
            Property="Background"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Control}, Path=Background}" />

        <Setter
            Property="Foreground"
            Value="White" />

        <Style.Triggers>
            <Trigger 
                Property="IsSubmenuOpen" 
                Value="true">

                <Setter 
                    Property="Foreground"
                    Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>